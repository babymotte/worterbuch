name: Release binary artifacts

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  release:
    runs-on: ${{ matrix.image }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            image: ubuntu-latest
            ext: ""
          - target: x86_64-pc-windows-msvc
            image: windows-latest
            ext: ".exe"
          - target: x86_64-apple-darwin
            image: macos-latest
            ext: ""

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          override: true

      - name: Build
        run: cargo build --all --release

      - name: Package Binaries
        uses: vimtor/action-zip@v1
        with:
          files: target/release/worterbuch${{ matrix.ext }} target/release/wbc${{ matrix.ext }} target/release/wbget${{ matrix.ext }} target/release/wbpget${{ matrix.ext }} target/release/wbset${{ matrix.ext }} target/release/wbsub${{ matrix.ext }} target/release/wbpsub${{ matrix.ext }} target/release/wbimp${{ matrix.ext }} target/release/wbexp${{ matrix.ext }} target/release/wbsend${{ matrix.ext }}
          dest: worterbuch-${{ matrix.target }}.zip

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: worterbuch-${{ matrix.target }}.zip

  publish:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          override: true

      - name: Publish to crates.io
        run: cd worterbuch-common && cargo publish --token ${CRATES_TOKEN} ; cd ../worterbuch-client && cargo publish --token ${CRATES_TOKEN} ; cd ../worterbuch && cargo publish --token ${CRATES_TOKEN} ; cd ../worterbuch-cli && cargo publish --token ${CRATES_TOKEN} ; echo done
        env:
          CRATES_TOKEN: ${{ secrets.CRATES_TOKEN }}
