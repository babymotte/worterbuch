# Default values for worterbuch-cluster-orchestrator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: babymotte/worterbuch-cluster-orchestrator
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: true
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: wb.homelab
      paths:
        - path: /
          pathType: Prefix
    - host: wb.local
      paths:
        - path: /
          pathType: Prefix
    - host: worterbuch.homelab
      paths:
        - path: /
          pathType: Prefix
    - host: worterbuch.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

storage:
  enabled: true
  size: 3Gi
  class: ""

timeouts:
  send: 10
  shutdown: 20

channelBufferSize: 10000
extendedMonitoring: 1

persistenceInterval: 5

service:
  type: NodePort
  port:
    http: 80
    tcp: 9090
    clusterSync: 8282
    raft: 9292
    stats: 8383

nodes:
  alice:
    httpNodePort: 30081
    tcpNodePort: 30091
    statsNodePort: 30084
  bob:
    httpNodePort: 30082
    tcpNodePort: 30092
    statsNodePort: 30085
  carl:
    httpNodePort: 30083
    tcpNodePort: 30093
    statsNodePort: 30086

leaderElection:
  heartbeat:
    interval: 100
    timeout: 500

livenessProbe:

readinessProbe:
  httpGet:
    path: /ready
    port: stats
  periodSeconds: 1
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 1

authToken: ""
